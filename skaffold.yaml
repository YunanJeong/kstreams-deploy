apiVersion: skaffold/v4beta3 
kind: Config 

build:
  local:
    push: false                  # 로컬(도커 데몬)에서만 빌드 # push하고싶을땐 cli에서 --default-repo와 --push옵션 추가
  artifacts: []
  #  - image: xxxxx              # 생성할 이미지 이름(repository) 지정
  #    context: xxx/xxx          # dockerfile 및 관련 파일 위치
  
deploy:
  helm:                          # skaffold로 deploy동작이 포함된 명령어 실행시, helm으로 이를 수행하겠다는 뜻
    releases: []
      # - name: xxx              # 릴리즈 이름
      #   chartPath: xxx         # Helm 차트 경로 (소스코드, 아카이브 둘 다 가능)
      #   skipBuildDependencies: true
      #   setValueTemplates: xxx # Helm 배포시 개별 value 할당. valuesFiles보다 우선순위가 높다.
      #   valuesFiles: xxx.yml   # Helm 배포시 overriding values 파일. setValueTemplates 대상 외 나머지 value들만 할당
                                 # 우선순위 skaffold CLI options > setValueTemplates > valuesFiles

# skaffold 실행시 profile을 선택하여 위 build, deploy 등에 Override할 수 있다.

profiles:
  - name: mavenapp-java17  # java17, streams 및 기타 종속성들 전부 최신화한 샘플
    patches:
      - op: add
        path: /build/artifacts
        value:
          - image: kstreams-mavenapp-java17
            context: values/5-mavenapp-java17/image/
      - op: add
        path: /deploy/helm/releases
        value:
          - name: kstreams-mavenapp-java17-sample
            chartPath: chartrepo/kstreams-0.0.5.tgz
            skipBuildDependencies: true
            setValueTemplates:
              streams.kafka.readinessCheck.enabled: false
              streams.nodeSelector: "null"
              streams.image.registry:   "{{ .IMAGE_DOMAIN_kstreams_mavenapp_java17 }}"
              streams.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_kstreams_mavenapp_java17 }}"
              streams.image.tag:        "{{ .IMAGE_TAG_kstreams_mavenapp_java17 }}" 
            valuesFiles:
              - values/5-mavenapp-java17/value.yaml

  - name: mavenapp
    patches:
      - op: add
        path: /build/artifacts
        value:
          - image: kstreams-mavenapp   
            context: values/4-mavenapp/image/
      - op: add
        path: /deploy/helm/releases
        value:
          - name: kstreams-mavenapp-sample
            chartPath: chartrepo/kstreams-0.0.5.tgz
            skipBuildDependencies: true
            setValueTemplates:
              streams.kafka.readinessCheck.enabled: false
              streams.nodeSelector: "null"
              streams.image.registry: "{{ .IMAGE_DOMAIN_kstreams_mavenapp }}"
              streams.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_kstreams_mavenapp }}"
              streams.image.tag: "{{ .IMAGE_TAG_kstreams_mavenapp }}" 
            valuesFiles:
              - values/4-mavenapp/value.yaml
      
  - name: gradleapp
    patches:
      - op: add
        path: /build/artifacts
        value:
          - image: kstreams-gradleapp   
            context: values/3-gradleapp/image/
      - op: add
        path: /deploy/helm/releases
        value:
          - name: kstreams-gradleapp-sample
            chartPath: chartrepo/kstreams-0.0.5.tgz
            skipBuildDependencies: true
            setValueTemplates:
              streams.kafka.readinessCheck.enabled: false
              streams.nodeSelector: "null"
              streams.image.registry: "{{ .IMAGE_DOMAIN_kstreams_gradleapp }}"
              streams.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_kstreams_gradleapp }}"
              streams.image.tag: "{{ .IMAGE_TAG_kstreams_gradleapp }}"
            valuesFiles:
              - values/3-gradleapp/value.yaml

  - name: my-first-streams
    patches:
      - op: add
        path: /build/artifacts
        value:
          - image: kstreams-my-first-streams   
            context: values/0-filter/image/
      - op: add
        path: /deploy/helm/releases
        value:
          - name: kstreams-my-first-streams
            chartPath: chartrepo/kstreams-0.0.5.tgz
            skipBuildDependencies: true
            setValueTemplates:
              streams.kafka.readinessCheck.enabled: false
              streams.nodeSelector: "null"
              streams.image.registry: "{{ .IMAGE_DOMAIN_kstreams_my_first_streams }}"
              streams.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_kstreams_my_first_streams }}"
              streams.image.tag: "{{ .IMAGE_TAG_kstreams_my_first_streams }}"
            valuesFiles:
              - values/0-filter/value.yaml


  - name: branch-deprecated
    patches:
      - op: add
        path: /build/artifacts
        value:
          - image: kstreams-branch-deprecated
            context: values/1-branch-deprecated/image/
      - op: add
        path: /deploy/helm/releases
        value:
          - name: kstreams-branch-deprecated
            chartPath: chartrepo/kstreams-0.0.5.tgz
            skipBuildDependencies: true
            setValueTemplates:
              streams.kafka.readinessCheck.enabled: false
              streams.nodeSelector: "null"
              streams.image.registry: "{{ .IMAGE_DOMAIN_branch_deprecated }}"
              streams.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_branch_deprecated }}"
              streams.image.tag: "{{ .IMAGE_TAG_branch_deprecated }}"
            valuesFiles:
              - values/1-branch-deprecated/value.yaml

  - name: branch-split
    patches:
      - op: add
        path: /build/artifacts
        value:
          - image: kstreams-branch-split   
            context: values/2-branch-split/image/
      - op: add
        path: /deploy/helm/releases
        value:
          - name: kstreams-branch-split
            chartPath: chartrepo/kstreams-0.0.5.tgz
            skipBuildDependencies: true
            setValueTemplates:
              streams.kafka.readinessCheck.enabled: false
              streams.nodeSelector: "null"
              streams.image.registry: "{{ .IMAGE_DOMAIN_branch_split }}"
              streams.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_branch_split }}"
              streams.image.tag: "{{ .IMAGE_TAG_branch_split }}"
            valuesFiles:
              - values/2-branch-split/value.yaml